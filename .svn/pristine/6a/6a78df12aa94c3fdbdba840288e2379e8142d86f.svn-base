package com.shendu.jthome.view.fragment;


import android.content.res.Resources;
import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;

import com.shendu.jthome.R;
import com.shendu.jthome.adapter.DynamicTabPagerAdapter;
import com.shendu.jthome.base.BaseFragment;
import com.shendu.jthome.view.activity.MainActivity;
import com.shendu.jthome.view.myview.ShowViewPager;

import java.util.ArrayList;
import java.util.List;

/**
 * 动态 xyy
 */
public class DynamicFragment extends BaseFragment {

    private TabLayout tablayout;
    public static ShowViewPager viewpager;
    private DynamicTabPagerAdapter tabPagerAdapter;
    private List<Fragment> list;
    private Resources rs;
    private String titles[];

    float x_tmp1 = 0;
    float y_tmp1 = 0;
    private boolean isSlidingMenu = false;

    @Override
    public View initView(LayoutInflater inflater) {

        view = inflater.inflate(R.layout.fragment_dynamic, null);
        rs = getResources();
        titles = new String[]{rs.getString(R.string.dynamic_focus), rs.getString(R.string.dynamic_hot), rs.getString(R.string.dynamic_act)};

        viewpager = (ShowViewPager) view.findViewById(R.id.tab_vp);
        tablayout = (TabLayout) view.findViewById(R.id.tablayout);


        tabPagerAdapter = new DynamicTabPagerAdapter(getChildFragmentManager(), list, titles);
        viewpager.setAdapter(tabPagerAdapter);


        //给tablayout设置viewpager
        tablayout.setupWithViewPager(viewpager);
        tablayout.setTabMode(TabLayout.MODE_FIXED);

        viewpager.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View view, MotionEvent event) {

                if (MainActivity.mLeftMenu.isOpen) {
                    viewpager.getParent().requestDisallowInterceptTouchEvent(false);
                } else {
                    viewpager.getParent().requestDisallowInterceptTouchEvent(true);
                }

                //获取当前坐标
                float x = event.getX();
                float y = event.getY();

                float x_tmp2;


                switch (event.getAction()) {

                    case MotionEvent.ACTION_DOWN:
                        x_tmp1 = x;
                        y_tmp1 = y;

                        break;

                    case MotionEvent.ACTION_UP:
                        x_tmp2 = x;
                        Log.e("xyy", "x_tmp1=" + x_tmp1);
                        if (x_tmp1 != 0 && y_tmp1 != 0) {
                            if (x_tmp1 - x_tmp2 > 8) {
                                Log.e("xyy", "向右滑动");
//                                MainActivity.mLeftMenu.closeMenu();
                                isSlidingMenu = false;
                            }
                            if (x_tmp2 - x_tmp1 > 8) {
                                if (viewpager.getCurrentItem() == 0) {
                                    isSlidingMenu = true;
                                    MainActivity.mLeftMenu.openMenu();
                                } else {
//                                    MainActivity.mLeftMenu.closeMenu();
                                    isSlidingMenu = false;
                                }
                                Log.e("xyy", "向左滑动");
                            }
                        }
                        break;
                }

                return false;
            }
        });


        return view;
    }

    @Override
    public void initData(Bundle savedInstanceState) {


        list = new ArrayList<Fragment>();
        list.add(new FocusFragment());
        list.add(new HotPointFragment());
        list.add(new ActFragment());

    }

    @Override
    public void onClick(View view) {

    }


}
